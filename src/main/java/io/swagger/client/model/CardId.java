/*
 * Customer Reliability
 *  <b>Customer Reliability</b>  
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * card identification
 */
@ApiModel(description = "card identification")

public class CardId {
  @JsonProperty("value")
  private String value = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("processor")
  private String processor = null;

  @JsonProperty("bin")
  private String bin = null;

  @JsonProperty("tail")
  private String tail = null;

  public CardId value(String value) {
    this.value = value;
    return this;
  }

   /**
   * card identification number
   * @return value
  **/
  @ApiModelProperty(example = "4647711700000", value = "card identification number")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public CardId type(String type) {
    this.type = type;
    return this;
  }

   /**
   * card identification type [PAN, PAN_ALIAS]
   * @return type
  **/
  @ApiModelProperty(example = "PAN", value = "card identification type [PAN, PAN_ALIAS]")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CardId processor(String processor) {
    this.processor = processor;
    return this;
  }

   /**
   * card processor S for SIA , E for Equens
   * @return processor
  **/
  @ApiModelProperty(example = "S", value = "card processor S for SIA , E for Equens")
  public String getProcessor() {
    return processor;
  }

  public void setProcessor(String processor) {
    this.processor = processor;
  }

  public CardId bin(String bin) {
    this.bin = bin;
    return this;
  }

   /**
   * first 6 characters of card number
   * @return bin
  **/
  @ApiModelProperty(value = "first 6 characters of card number")
  public String getBin() {
    return bin;
  }

  public void setBin(String bin) {
    this.bin = bin;
  }

  public CardId tail(String tail) {
    this.tail = tail;
    return this;
  }

   /**
   * last 4 characters of card number
   * @return tail
  **/
  @ApiModelProperty(value = "last 4 characters of card number")
  public String getTail() {
    return tail;
  }

  public void setTail(String tail) {
    this.tail = tail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardId cardId = (CardId) o;
    return Objects.equals(this.value, cardId.value) &&
        Objects.equals(this.type, cardId.type) &&
        Objects.equals(this.processor, cardId.processor) &&
        Objects.equals(this.bin, cardId.bin) &&
        Objects.equals(this.tail, cardId.tail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, type, processor, bin, tail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardId {\n");
    
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    processor: ").append(toIndentedString(processor)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    tail: ").append(toIndentedString(tail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

