/*
 * Notification API
 * <b>Notification</b>  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Attachment;
import io.swagger.client.model.Recipient;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EmailTrackingDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-05T15:49:18.314Z")
public class EmailTrackingDetails {
  @SerializedName("trackId")
  private Integer trackId = null;

  @SerializedName("emailTag")
  private String emailTag = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("from")
  private Recipient from = null;

  @SerializedName("to")
  private List<Recipient> to = null;

  @SerializedName("cc")
  private List<Recipient> cc = null;

  @SerializedName("bcc")
  private List<Recipient> bcc = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("templateId")
  private String templateId = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("attachmentsName")
  private List<Attachment> attachmentsName = null;

  public EmailTrackingDetails trackId(Integer trackId) {
    this.trackId = trackId;
    return this;
  }

   /**
   * unique id of email tracked
   * @return trackId
  **/
  @ApiModelProperty(required = true, value = "unique id of email tracked")
  public Integer getTrackId() {
    return trackId;
  }

  public void setTrackId(Integer trackId) {
    this.trackId = trackId;
  }

  public EmailTrackingDetails emailTag(String emailTag) {
    this.emailTag = emailTag;
    return this;
  }

   /**
   * tag filled by the client in order to identify the email tracked
   * @return emailTag
  **/
  @ApiModelProperty(value = "tag filled by the client in order to identify the email tracked")
  public String getEmailTag() {
    return emailTag;
  }

  public void setEmailTag(String emailTag) {
    this.emailTag = emailTag;
  }

  public EmailTrackingDetails status(String status) {
    this.status = status;
    return this;
  }

   /**
   * email delivery status. 0&#x3D;Sent, -1&#x3D;In error
   * @return status
  **/
  @ApiModelProperty(value = "email delivery status. 0=Sent, -1=In error")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public EmailTrackingDetails from(Recipient from) {
    this.from = from;
    return this;
  }

   /**
   * email sender
   * @return from
  **/
  @ApiModelProperty(value = "email sender")
  public Recipient getFrom() {
    return from;
  }

  public void setFrom(Recipient from) {
    this.from = from;
  }

  public EmailTrackingDetails to(List<Recipient> to) {
    this.to = to;
    return this;
  }

  public EmailTrackingDetails addToItem(Recipient toItem) {
    if (this.to == null) {
      this.to = new ArrayList<Recipient>();
    }
    this.to.add(toItem);
    return this;
  }

   /**
   * email \&quot;to\&quot; recipients tracked
   * @return to
  **/
  @ApiModelProperty(value = "email \"to\" recipients tracked")
  public List<Recipient> getTo() {
    return to;
  }

  public void setTo(List<Recipient> to) {
    this.to = to;
  }

  public EmailTrackingDetails cc(List<Recipient> cc) {
    this.cc = cc;
    return this;
  }

  public EmailTrackingDetails addCcItem(Recipient ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<Recipient>();
    }
    this.cc.add(ccItem);
    return this;
  }

   /**
   * email \&quot;cc\&quot; recipients tracked
   * @return cc
  **/
  @ApiModelProperty(value = "email \"cc\" recipients tracked")
  public List<Recipient> getCc() {
    return cc;
  }

  public void setCc(List<Recipient> cc) {
    this.cc = cc;
  }

  public EmailTrackingDetails bcc(List<Recipient> bcc) {
    this.bcc = bcc;
    return this;
  }

  public EmailTrackingDetails addBccItem(Recipient bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<Recipient>();
    }
    this.bcc.add(bccItem);
    return this;
  }

   /**
   * email \&quot;bcc\&quot; recipients tracked
   * @return bcc
  **/
  @ApiModelProperty(value = "email \"bcc\" recipients tracked")
  public List<Recipient> getBcc() {
    return bcc;
  }

  public void setBcc(List<Recipient> bcc) {
    this.bcc = bcc;
  }

  public EmailTrackingDetails subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * email subject tracked
   * @return subject
  **/
  @ApiModelProperty(value = "email subject tracked")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public EmailTrackingDetails templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * email templateId tracked
   * @return templateId
  **/
  @ApiModelProperty(value = "email templateId tracked")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public EmailTrackingDetails body(String body) {
    this.body = body;
    return this;
  }

   /**
   * email body tracked
   * @return body
  **/
  @ApiModelProperty(value = "email body tracked")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public EmailTrackingDetails attachmentsName(List<Attachment> attachmentsName) {
    this.attachmentsName = attachmentsName;
    return this;
  }

  public EmailTrackingDetails addAttachmentsNameItem(Attachment attachmentsNameItem) {
    if (this.attachmentsName == null) {
      this.attachmentsName = new ArrayList<Attachment>();
    }
    this.attachmentsName.add(attachmentsNameItem);
    return this;
  }

   /**
   * email attachments name tracked
   * @return attachmentsName
  **/
  @ApiModelProperty(value = "email attachments name tracked")
  public List<Attachment> getAttachmentsName() {
    return attachmentsName;
  }

  public void setAttachmentsName(List<Attachment> attachmentsName) {
    this.attachmentsName = attachmentsName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailTrackingDetails emailTrackingDetails = (EmailTrackingDetails) o;
    return Objects.equals(this.trackId, emailTrackingDetails.trackId) &&
        Objects.equals(this.emailTag, emailTrackingDetails.emailTag) &&
        Objects.equals(this.status, emailTrackingDetails.status) &&
        Objects.equals(this.from, emailTrackingDetails.from) &&
        Objects.equals(this.to, emailTrackingDetails.to) &&
        Objects.equals(this.cc, emailTrackingDetails.cc) &&
        Objects.equals(this.bcc, emailTrackingDetails.bcc) &&
        Objects.equals(this.subject, emailTrackingDetails.subject) &&
        Objects.equals(this.templateId, emailTrackingDetails.templateId) &&
        Objects.equals(this.body, emailTrackingDetails.body) &&
        Objects.equals(this.attachmentsName, emailTrackingDetails.attachmentsName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trackId, emailTag, status, from, to, cc, bcc, subject, templateId, body, attachmentsName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailTrackingDetails {\n");
    
    sb.append("    trackId: ").append(toIndentedString(trackId)).append("\n");
    sb.append("    emailTag: ").append(toIndentedString(emailTag)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    attachmentsName: ").append(toIndentedString(attachmentsName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

