/*
 * Notification API
 * <b>Notification</b>  
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * attachment to an email
 */
@ApiModel(description = "attachment to an email")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-05T15:49:18.314Z")
public class Attachment {
  @SerializedName("name")
  private String name = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("byteStream")
  private String byteStream = null;

  public Attachment name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of attachment file
   * @return name
  **/
  @ApiModelProperty(required = true, value = "name of attachment file")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Attachment contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * attachment content-type
   * @return contentType
  **/
  @ApiModelProperty(required = true, value = "attachment content-type")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public Attachment byteStream(String byteStream) {
    this.byteStream = byteStream;
    return this;
  }

   /**
   * base64 encoded characters of attachment
   * @return byteStream
  **/
  @ApiModelProperty(required = true, value = "base64 encoded characters of attachment")
  public String getByteStream() {
    return byteStream;
  }

  public void setByteStream(String byteStream) {
    this.byteStream = byteStream;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Attachment attachment = (Attachment) o;
    return Objects.equals(this.name, attachment.name) &&
        Objects.equals(this.contentType, attachment.contentType) &&
        Objects.equals(this.byteStream, attachment.byteStream);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, contentType, byteStream);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Attachment {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    byteStream: ").append(toIndentedString(byteStream)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

